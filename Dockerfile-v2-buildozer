#FROM ubuntu:20.04
#FROM ubuntu:22.04
#FROM python:3.12-slim as base
#FROM python:3.12 as base
FROM macos:latest

ENV PYTHONUNBUFFERED 1 \
    POETRY_HOME="/opt/poetry"

ENV USER="user"
ENV HOME_DIR="/home/${USER}"
ENV WORK_DIR="${HOME_DIR}/hostcwd" \
    SRC_DIR="${HOME_DIR}/src" \
    PATH="${HOME_DIR}/.local/bin:${PATH}"
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=1.6.1 \
    # make poetry install to this location
    POETRY_HOME="/opt/poetry" \
    # make poetry create the virtual environment in the project's root it gets named `.venv`
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    # Paths - this is where requirements and virtual environment will live
    PYDEPS_PATH="/opt/pydeps" \
    VENV_PATH="/opt/pydeps/.venv" \
    # X11 forwarding
    USE_X11=1

# Prepend poetry and venv to path
ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"



# `builder` stage is used to build deps and create virtual environment
FROM base as builder
# configures locale
RUN apt update -qq > /dev/null \
    && DEBIAN_FRONTEND=noninteractive apt install -qq --yes --no-install-recommends \
    locales && \
    locale-gen en_US.UTF-8
ENV LANG="en_US.UTF-8" \
    LANGUAGE="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

# system requirements to build most of the recipes

#RUN apt-get update && apt-get install --no-install-recommends -y \
#        build-essential \
#        curl \
#        x11-apps

RUN apt-get update -qq > /dev/null \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qq --yes --no-install-recommends \
    autoconf \
    automake \
    build-essential \
    ccache \
    cmake \
    curl \
    gettext \
    git \
    libffi-dev \
    libltdl-dev \
    libssl-dev \
    libtool \
    # openjdk-13-jdk \
    patch \
    pkg-config \
    python3-pip \
    python3-setuptools \
    sudo \
    unzip \
    zip \
    zlib1g-dev


# Install poetry - respects $POETRY_VERSION and $POETRY_HOME
RUN curl -sSL https://install.python-poetry.org | python3 -

# Copy project requirement files here to ensure they will be cached.
WORKDIR $PYDEPS_PATH
COPY poetry.lock pyproject.toml ./

# Install only main dependencies - uses $POETRY_VIRTUALENVS_IN_PROJECT internally
RUN poetry install --only main


# Dev image
FROM builder AS dev

# Copy in poetry and venv
COPY --from=builder $POETRY_HOME $POETRY_HOME
COPY --from=builder $PYDEPS_PATH $PYDEPS_PATH

RUN poetry install --only dev

RUN useradd --create-home --shell /bin/bash ${USER}
# with sudo access and no password
RUN usermod -append --groups sudo ${USER}
RUN echo "%sudo ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

USER ${USER}
WORKDIR ${WORK_DIR}

COPY . /app
WORKDIR /app

COPY --chown=user:user . ${SRC_DIR}

ENTRYPOINT ["buildozer"]
